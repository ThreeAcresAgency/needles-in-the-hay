{% comment %}
  Custom variant picker that uses variant images as swatches.

  @param {product} product_resource - The product resource object.
  @param {object} block - The block settings.
  @param {object} section - The section settings.
{% endcomment %}


{% unless product_resource.has_only_default_variant %}
  {% liquid
    assign button_background_brightness = 150
    if section.settings.color_scheme.settings.foreground != blank
      assign button_background_brightness = section.settings.color_scheme.settings.foreground | color_brightness
    endif

    if button_background_brightness < 105
      assign strikethrough_color_mix = '#000'
    else
      assign strikethrough_color_mix = '#fff'
    endif
  %}
  <variant-picker
    class="variant-picker variant-picker--{{ block.settings.alignment }}"
    style="--color-strikethrough-mix: {{ strikethrough_color_mix }};"
    data-section-id="{{ section.id }}"
    data-product-id="{{ product_resource.id }}"
    data-block-id="{{ block.id }}"
    data-product-url="{{ product_resource.url }}"
    ref="mainVariantPicker"
    {% if product.id == product_resource.id %}
    data-template-product-match="true"
    {% endif %}>
    <form class="variant-picker__form">
      {%- for product_option in product_resource.options_with_values -%}
        {%- liquid
          assign variant_style = block.settings.variant_style
          if variant_style == blank
            assign variant_style = 'buttons'
          endif

          assign fieldset_id = section.id | append: '-' | append: product_resource.id | append: '-' | append: product_option.name | handleize
          assign option_id_attribute = 'data-option-id="' | append: fieldset_id | append: '"'
          assign longest_value = 0
        -%}

        <!-- Dropdown for this option -->
        <div class="variant-option variant-option--dropdowns" style="margin-bottom: 0.5em;">
          <label for="Option-{{ block.id }}-{{ forloop.index0 }}" style="font-weight: 500;">{{ product_option.name | escape }}</label>
          <div class="variant-option__select-wrapper">
            <select
              id="Option-{{ block.id }}-{{ forloop.index0 }}"
              name="{{ product_option.name | escape }}-{{ block.id }}-{{ product_resource.id }}"
              class="variant-option__select">
              {%- for product_option_value in product_option.values -%}
                {%- liquid
                  assign current_option_value = product_option_value
                  assign option_index = product_option.position | minus: 1
                  assign matching_variant = null
                  for variant in product_resource.variants
                    if variant.options[option_index] == current_option_value
                      assign matching_variant = variant
                      break
                    endif
                  endfor
                -%}
                <option
                  value="{{ current_option_value | escape }}"
                  data-input-id="{{ product_option.position }}-{{ forloop.index0 }}"
                  data-option-value-id="{{ matching_variant.id }}"
                  data-variant-id="{{ matching_variant.id }}"
                  data-connected-product-url="{{ matching_variant.url }}"
                  {% if matching_variant and matching_variant.selected %}selected="selected"{% endif %}>
                  {% if matching_variant == null or matching_variant.available == false %}
                    {{ current_option_value | escape }} - {{ 'content.unavailable' | t }}
                  {% else %}
                    {{ current_option_value | escape }}
                  {% endif %}
                </option>
              {%- endfor -%}
            </select>
            <svg
              aria-hidden="true"
              focusable="false"
              class="icon icon-caret"
              viewBox="0 0 10 6">
              {%- render 'icon', icon: 'caret' -%}
            </svg>
          </div>
        </div>

        {% liquid
          assign should_show_swatches = false
          if block.settings.image_swatch_option_names == blank or block.settings.image_swatch_option_names == null or block.settings.image_swatch_option_names == 'all'
            assign should_show_swatches = true
          else
            assign image_swatch_option_names_array = block.settings.image_swatch_option_names | split: ','
            for option_name in image_swatch_option_names_array
              assign trimmed_option_name = option_name | strip
              if trimmed_option_name == product_option.name
                assign should_show_swatches = true
                break
              endif
            endfor
          endif
        %}

        {%- if variant_style == 'buttons' and should_show_swatches -%}
          <fieldset class="variant-option variant-option--buttons variant-option--swatches" {{ option_id_attribute }}>
            <legend>
              {{ product_option.name | escape -}}
              <span class="variant-option__swatch-value">{{ product_option.selected_value }}</span>
            </legend>
            {%- for product_option_value in product_option.values -%}
              {% if product_option_value.size > longest_value and option_id_attribute %}
                {% assign longest_value = product_option_value.size %}
              {% endif %}
              <label class="swatch-radio-label">
                {%- liquid
                  assign current_option_value = product_option_value
                  assign option_index = product_option.position | minus: 1

                  assign matching_variant = null
                  for variant in product_resource.variants
                    if variant.options[option_index] == current_option_value
                      assign matching_variant = variant
                      break
                    endif
                  endfor

                  assign variant_image = matching_variant.image
                -%}

                <input
                  class="swatch-radio"
                  type="radio"
                  name="{{ product_option.name | escape }}-{{ block.id }}-{{ product_resource.id }}"
                  value="{{ current_option_value | escape }}"
                  aria-label="{{ current_option_value | escape }}"
                  {% if matching_variant == null or matching_variant.available == false %}
                  aria-disabled="true"
                  {% endif %}
                  data-input-id="{{ product_option.position }}-{{ forloop.index0 }}"
                  data-option-value-id="{{ matching_variant.id }}"
                  data-variant-id="{{ matching_variant.id }}"
                  data-option-available="{% if matching_variant and matching_variant.available %}true{% else %}false{% endif %}"
                  data-connected-product-url="{{ matching_variant.url }}"
                  {% if matching_variant and matching_variant.selected %}
                  checked
                  {% endif %}>

                {% if block.settings.show_variant_images and variant_image != blank %}
                  <span class="swatch-radio-image">
                    <img
                      src="{{ variant_image | image_url: width: 80, height: 80, crop: 'center' }}"
                      alt="{{ current_option_value | escape }}"
                      style="width: 100%; height: 100%; object-fit: cover;">
                  </span>
                {% else %}
                  <span class="swatch-radio-image swatch-radio-image--text">{{ current_option_value | escape | slice: 0, 1 }}</span>
                {% endif %}

                {% render 'strikethrough-variant'
                  , product_option: product_option_value %}
              </label>
            {%- endfor -%}
            {% if option_id_attribute %}
              {% style %}
                [data-option-id="{{ fieldset_id }}"] {
                  --variant-ch: {{ longest_value }}ch;
                }
              {% endstyle %}
            {% endif %}
          </fieldset>
        {%- endif -%}
        {%- if block.settings.variant_style == 'dropdowns' -%}
          {%
            # There is an opportunity to build a custom select component that will allow us to style the select element further (animation for dropdown, swatches shown in the dropdown options, etc)
            # It' s too bad as it mean rebuilding baked in behaviours but I think we've already done that for the locale selectors
            # in dawn. So it might mean more time spent in setting it up but worth it for future updates/styling.
          %}
          {% liquid
            assign property_being_updated = false
            if settings.variant_swatch_width != settings.variant_swatch_height
              assign property_being_updated = true
              # (original width / original height) x new height (20px at the moment) = new width
              assign new_width = settings.variant_swatch_width | times: 1.0 | divided_by: settings.variant_swatch_height | times: 20
            endif
          %}

          <div class="variant-option variant-option--dropdowns">
            <label for="Option-{{ block.id }}-{{ forloop.index0 }}">{{ product_option.name | escape }}</label>
            <div class="variant-option__select-wrapper" style="
                  {%- if property_being_updated  -%}
                  --variant-picker-swatch-width: clamp(10px,{{ new_width }}px, 50px);
                  {%- endif -%}
                  ">
              <select
                id="Option-{{ block.id }}-{{ forloop.index0 }}"
                name="options[{{ product_option.name | escape }}]"
                class="variant-option__select">
                {%- for product_option_value in product_option.values -%}
                  <option
                    value="{{ product_option_value | escape }}"
                    data-input-id="{{ product_option.position }}-{{ forloop.index0 }}"
                    data-option-value-id="{{ product_option_value.id }}"
                    data-variant-id="{{ product_option_value.variant.id }}"
                    data-connected-product-url="{{ product_option_value.product_url }}"
                    {% if product_option_value.selected %}
                    selected="selected"
                    {% endif %}>
                    {% if product_option_value.available == false %}
                      {{ product_option_value | escape }} - {{ 'content.unavailable' | t }}
                    {% else %}
                      {{ product_option_value | escape }}
                    {% endif %}
                  </option>
                {%- endfor -%}
              </select>
              <svg
                aria-hidden="true"
                focusable="false"
                class="icon icon-caret"
                viewBox="0 0 10 6">
                {%- render 'icon', icon: 'caret' -%}
              </svg>
            </div>
          </div>
        {%- endif -%}
      {%- endfor -%}

      <script type="application/json">
        {{ product_resource.selected_or_first_available_variant | json }}
      </script>
    </form>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.variant-option__select').forEach(function(select) {
          select.addEventListener('change', function() {
            const name = select.name;
            const value = select.value;
            const radios = document.querySelectorAll('input[type="radio"][name="' + name + '"]');
            radios.forEach(function(radio) {
              if (radio.value === value) {
                radio.checked = true;
                radio.dispatchEvent(new Event('change', { bubbles: true }));
              }
            });
          });
        });
      });
    </script>
  </variant-picker>
{% endunless %}

{% stylesheet %}
  .variant-picker {
    width: 100%;
  }

  .variant-picker__form {
    display: flex;
    flex-direction: column;
    gap: var(--padding-lg);
    width: 100%;
  }

  .variant-picker[data-shopify-visual-preview] {
    min-width: 300px;
    padding-inline-start: max(4px, var(--padding-inline-start));
  }

  .variant-option {
    --options-border-radius: var(--variant-picker-button-radius);
    --options-border-width: var(--variant-picker-button-border-width);
    --variant-option-padding-inline: var(--padding-md);
  }

  .variant-option--swatches {
    --options-border-radius: var(--variant-picker-swatch-radius);
    width: 100%;
    margin: 0;
    padding: 0;
    border: none;
  }

  .variant-option--swatches-disabled {
    pointer-events: none;
    cursor: not-allowed;
  }

  .variant-option--swatches > overflow-list {
    justify-content: var(--product-swatches-alignment);

    @media (width < 750px) {
      justify-content: var(--product-swatches-alignment-mobile);
    }
  }

  .variant-option--buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;
    margin: 0;
    padding: 0;
    border: none;
    align-items: center;
  }

  .variant-option--buttons legend {
    padding: 0;
    margin: 0 0 4px 0;
    line-height: 1.2;
  }

  .variant-option__swatch-value {
    padding-inline-start: var(--padding-xs);
    color: rgba(from var(--color-foreground) r g b / 70%);
  }

  .variant-option__button-label {
    --variant-picker-stroke-color: var(--color-variant-border);

    display: flex;
    flex: 0 0 calc(3ch + 1.3em);
    align-items: center;
    position: relative;
    padding-block: var(--padding-sm);
    padding-inline: var(--padding-lg);
    border: var(--style-border-width) solid var(--color-variant-border);
    border-radius: var(--options-border-radius);
    border-width: var(--options-border-width);
    overflow: clip;
    justify-content: center;
    min-height: calc(3ch + 1.3em);
    min-width: fit-content;
    white-space: nowrap;
    background-color: var(--color-variant-background);
    color: var(--color-variant-text);
    transition: background-color var(--animation-speed) var(--animation-easing)
    , border-color var(--animation-speed) var(--animation-easing);

     &:hover {
      background-color: var(--color-variant-hover-background);
      border-color: var(--color-variant-hover-border);
      color: var(--color-variant-hover-text);
    }

    @media screen and (width > = 750px) {
      padding: var(--padding-xs) var(--variant-option-padding-inline);
    }
  }

  .variant-option__button-label__text {
    text-align: left;
    text-wrap: auto;
  }

  .variant-option--equal-width-buttons {
    --variant-min-width: clamp(44px, calc(var(--variant-option-padding-inline) * 2 + var(--variant-ch)), 100%);

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--variant-min-width), 1fr));

    .variant-option__button-label {
      min-width: var(--variant-min-width);
    }

    .variant-option__button-label__text {
      text-align: center;
      text-wrap: balance;
    }
  }

  .variant-option__button-label:has(:focus-visible) {
    --variant-picker-stroke-color: var(--color-foreground);

    border-color: var(--color-foreground);
    outline: var(--focus-outline-width) solid var(--color-foreground);
    outline-offset: var(--focus-outline-offset);
  }

  .variant-option__button-label--has-swatch {
    padding: 0;
    border: none;
    display: block;
    flex-basis: auto;
    min-height: auto;
  }

  .variant-option__button-label:has(:checked) {
    color: var(--color-selected-variant-text);
    background-color: var(--color-selected-variant-background);
    border-color: var(--color-selected-variant-border);
    transition: background-color var(--animation-speed) var(--animation-easing)
    , border-color var(--animation-speed) var(--animation-easing);

     &:hover {
      background-color: var(--color-selected-variant-hover-background);
      border-color: var(--color-selected-variant-hover-border);
      color: var(--color-selected-variant-hover-text);
    }
  }

  .variant-option__button-label:has([data-option-available='false']) {
    color: rgba(from var(--color-variant-text) r g b / 60%);
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:hover .swatch {
    /* Removed outline effect */
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label:has(:focus-visible) .swatch {
    outline: var(--focus-outline-width) solid currentcolor;
    outline-offset: var(--focus-outline-offset);
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label:has(:focus-visible) {
    outline: none;
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:hover {
    outline: none;
  }

  .swatch-variant-main-picker__button-label--has-swatch:hover {
    /* Removed outline effect */
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:has(:checked) {
    outline: none;
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:has(:checked) .swatch {
    outline: var(--focus-outline-width) solid var(--color-foreground);
    outline-offset: var(--focus-outline-offset);
  }

  .variant-option__button-label--has-swatch:has(:checked) {
    outline: var(--focus-outline-width) solid var(--color-foreground);
    outline-offset: var(--focus-outline-offset);
  }

  .variant-option__button-label:has([data-option-available='false']):has(:checked) {
    --variant-picker-stroke-color: rgba(from var(--color-variant-text) r g b / 60%);

    background-color: inherit;
    color: rgba(from var(--color-variant-text) r g b / 60%);
    border-color: var(--color-selected-variant-border);
  }

  .variant-option__button-label input,
  .variant-option--images input {
    /* remove the checkbox from the page flow */
    position: absolute;

    /* set the dimensions to match those of the label */
    inset: 0;

    /* hide it */
    opacity: 0;
    margin: 0;
    cursor: pointer;
    width: 100%;
    height: 100%;
  }

  .variant-option__button-label svg {
    position: absolute;
    top: 0;
    left: 0;
    cursor: pointer;
    pointer-events: none;
    stroke-width: var(--style-border-width);
    stroke: var(--variant-picker-stroke-color);
  }

  .variant-option__select-wrapper {
    display: flex;
    position: relative;
    border: var(--style-border-width-inputs) solid var(--color-border);
    border-radius: var(--style-border-radius-inputs);
    align-items: center;
    margin-top: var(--margin-2xs);
    overflow: clip;
    transition: background-color var(--animation-speed) var(--animation-easing)
    , border-color var(--animation-speed) var(--animation-easing);
  }

  .variant-option__select-wrapper:has(.swatch) {
    --variant-picker-swatch-width: 20px;
    --variant-picker-swatch-height: 20px;
  }

  .variant-option__select-wrapper:hover {
    border-color: var(--color-variant-hover-border);
  }

  .variant-option__select:focus-visible {
    outline: var(--focus-outline-width) solid currentcolor;
    outline-offset: var(--focus-outline-offset);
  }

  .variant-option__select {
    padding-block: var(--padding-md);
    padding-inline: var(--padding-lg) calc(var(--padding-lg) + var(--icon-size-2xs));
    appearance: none;
    border: 0;
    width: 100%;
    margin: 0;
    cursor: pointer;
  }

  .variant-option__select-wrapper .icon {
    position: absolute;
    right: var(--padding-md);
    top: 50%;
    transform: translateY(-50%);
    width: var(--icon-size-2xs);
    height: var(--icon-size-2xs);
    pointer-events: none;
  }

  .variant-option__select--has-swatch {
    padding-inline-start: calc((2 * var(--padding-sm)) + var(--variant-picker-swatch-width));
  }

  .variant-option__select-wrapper .swatch {
    position: absolute;
    top: 50%;
    left: var(--padding-md);
    transform: translateY(-50%);
  }

  .variant-picker--center,
  .variant-picker--center .variant-option {
    text-align: center;
    align-items: center;
    justify-content: center;
    width: 100%;
  }

  .variant-picker--right,
  .variant-picker--right .variant-option {
    text-align: right;
    justify-content: right;
  }

  /* Make text light when selected swatch is hovered */
  .variant-option__button-label--has-swatch:has(:checked):hover .variant-option__button-label__text {
    color: #fff;
  }

  .variant-picker .variant-option--buttons label:has(.swatch) {
    border-radius: var(--variant-picker-swatch-radius);
    /* No border or outline on hover */
  }
  .swatch-variant-main-picker__button-label--has-swatch:hover {
    /* background-color: rgba(0, 0, 0, 0.05); */
    outline: none;
    border: none;
  }
  .variant-option__button-label {
    /* Remove hover background, color, and border for swatch labels */
  }
{% endstylesheet %}

{% style %}
  /* Styles for variant image swatches */
  .swatch {
    width: 56px;
    height: 56px;
    border-radius: 50%;
    display: inline-block;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    margin-right: 8px;
    background-color: var(--swatch-background, transparent);
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease
    , box-shadow 0.2s ease;
    border: 2px solid white;
    /* Clean white border */
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    /* Softer shadow */
    overflow: hidden;
  }

  /* Text swatch styling for options without images */
  .swatch--text {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f5f5f5;
    color: #333;
    font-weight: bold;
    font-size: 14px;
  }

  /* Label styling */
  .swatch-variant-main-picker__button-label--has-swatch {
    display: flex;
    align-items: center;
    padding: 6px 10px;
    border-radius: 4px;
    margin-right: 6px;
    margin-bottom: 6px;
    transition: background-color 0.2s ease;
  }

  /* Hover state */
  .swatch-variant-main-picker__button-label--has-swatch:hover {
    background-color: rgba(0, 0, 0, 0.05);
    /* Removed outline effect */
  }

  .swatch-variant-main-picker__button-label--has-swatch:hover .swatch {
    /* Removed scale and box-shadow effect for hover */
  }

  /* Selected state */
  .swatch-variant-main-picker__button-label--has-swatch:has(:checked) {
    background-color: rgba(0, 0, 0, 0.08);
  }

  .swatch-variant-main-picker__button-label--has-swatch:has(:checked) .swatch {
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.8);
  }

  /* Fieldset styling */
  .variant-option--swatches {
    margin-bottom: 15px;
  }

  .variant-option--swatches legend {
    margin-bottom: 8px;
    font-weight: 500;
  }

  /* Option value text */
  .swatch-variant-main-picker__button-label__text {
    margin-left: 0;
    font-weight: normal;
    color: rgba(0, 0, 0, 0.6);
  }

  .swatch-radio-label {
    width: 56px;
    height: 56px;
    margin: 0 4px 0 0;
    padding: 0;
    display: inline-block;
    vertical-align: middle;
  }
  .swatch-radio {
    position: absolute;
    opacity: 0;
    width: 1px;
    height: 1px;
    overflow: hidden;
    pointer-events: none;
  }
  .swatch-radio-image,
  .swatch-radio-image--text {
    width: 56px;
    height: 56px;
    min-width: 56px;
    min-height: 56px;
    max-width: 56px;
    max-height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    border-radius: 50%;
  }
  .swatch-radio:checked + .swatch-radio-image {
    border-color: #222;
    box-shadow: 0 0 0 2px #222;
  }
  .swatch-radio:focus + .swatch-radio-image {
    border-color: #007ace;
    box-shadow: 0 0 0 2px #007ace;
  }
  .swatch-radio-label:hover .swatch-radio-image {
    border-color: #888;
  }
  .swatch-radio-image--text {
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f5f5f5;
    color: #333;
    font-weight: bold;
    font-size: 18px;
    width: 56px;
    height: 56px;
    border-radius: 50%;
  }
{% endstyle %}